/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Students as PrismaStudents } from "@prisma/client";

export class StudentsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.StudentsCountArgs, "select">): Promise<number> {
    return this.prisma.students.count(args);
  }

  async studentsItems(
    args: Prisma.StudentsFindManyArgs
  ): Promise<PrismaStudents[]> {
    return this.prisma.students.findMany(args);
  }
  async students(
    args: Prisma.StudentsFindUniqueArgs
  ): Promise<PrismaStudents | null> {
    return this.prisma.students.findUnique(args);
  }
  async createStudents(
    args: Prisma.StudentsCreateArgs
  ): Promise<PrismaStudents> {
    return this.prisma.students.create(args);
  }
  async updateStudents(
    args: Prisma.StudentsUpdateArgs
  ): Promise<PrismaStudents> {
    return this.prisma.students.update(args);
  }
  async deleteStudents(
    args: Prisma.StudentsDeleteArgs
  ): Promise<PrismaStudents> {
    return this.prisma.students.delete(args);
  }
}
