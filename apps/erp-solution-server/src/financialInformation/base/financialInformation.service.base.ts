/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  FinancialInformation as PrismaFinancialInformation,
} from "@prisma/client";

export class FinancialInformationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FinancialInformationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.financialInformation.count(args);
  }

  async financialInformations(
    args: Prisma.FinancialInformationFindManyArgs
  ): Promise<PrismaFinancialInformation[]> {
    return this.prisma.financialInformation.findMany(args);
  }
  async financialInformation(
    args: Prisma.FinancialInformationFindUniqueArgs
  ): Promise<PrismaFinancialInformation | null> {
    return this.prisma.financialInformation.findUnique(args);
  }
  async createFinancialInformation(
    args: Prisma.FinancialInformationCreateArgs
  ): Promise<PrismaFinancialInformation> {
    return this.prisma.financialInformation.create(args);
  }
  async updateFinancialInformation(
    args: Prisma.FinancialInformationUpdateArgs
  ): Promise<PrismaFinancialInformation> {
    return this.prisma.financialInformation.update(args);
  }
  async deleteFinancialInformation(
    args: Prisma.FinancialInformationDeleteArgs
  ): Promise<PrismaFinancialInformation> {
    return this.prisma.financialInformation.delete(args);
  }
}
