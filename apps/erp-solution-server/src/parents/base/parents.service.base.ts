/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Parents as PrismaParents } from "@prisma/client";

export class ParentsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ParentsCountArgs, "select">): Promise<number> {
    return this.prisma.parents.count(args);
  }

  async parentsItems(
    args: Prisma.ParentsFindManyArgs
  ): Promise<PrismaParents[]> {
    return this.prisma.parents.findMany(args);
  }
  async parents(
    args: Prisma.ParentsFindUniqueArgs
  ): Promise<PrismaParents | null> {
    return this.prisma.parents.findUnique(args);
  }
  async createParents(args: Prisma.ParentsCreateArgs): Promise<PrismaParents> {
    return this.prisma.parents.create(args);
  }
  async updateParents(args: Prisma.ParentsUpdateArgs): Promise<PrismaParents> {
    return this.prisma.parents.update(args);
  }
  async deleteParents(args: Prisma.ParentsDeleteArgs): Promise<PrismaParents> {
    return this.prisma.parents.delete(args);
  }
}
