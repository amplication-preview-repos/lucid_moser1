/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsInt,
  Min,
  Max,
  ValidateNested,
} from "class-validator";
import { FacultyWhereUniqueInput } from "../../faculty/base/FacultyWhereUniqueInput";
import { Type } from "class-transformer";
import { AssignmentsUpdateManyWithoutCoursesItemsInput } from "./AssignmentsUpdateManyWithoutCoursesItemsInput";
import { ExamsUpdateManyWithoutCoursesItemsInput } from "./ExamsUpdateManyWithoutCoursesItemsInput";

@InputType()
class CoursesUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  courseName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  courseCode?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  credits?: number | null;

  @ApiProperty({
    required: false,
    type: () => FacultyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FacultyWhereUniqueInput)
  @IsOptional()
  @Field(() => FacultyWhereUniqueInput, {
    nullable: true,
  })
  faculty?: FacultyWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => AssignmentsUpdateManyWithoutCoursesItemsInput,
  })
  @ValidateNested()
  @Type(() => AssignmentsUpdateManyWithoutCoursesItemsInput)
  @IsOptional()
  @Field(() => AssignmentsUpdateManyWithoutCoursesItemsInput, {
    nullable: true,
  })
  assignmentsItems?: AssignmentsUpdateManyWithoutCoursesItemsInput;

  @ApiProperty({
    required: false,
    type: () => ExamsUpdateManyWithoutCoursesItemsInput,
  })
  @ValidateNested()
  @Type(() => ExamsUpdateManyWithoutCoursesItemsInput)
  @IsOptional()
  @Field(() => ExamsUpdateManyWithoutCoursesItemsInput, {
    nullable: true,
  })
  examsItems?: ExamsUpdateManyWithoutCoursesItemsInput;
}

export { CoursesUpdateInput as CoursesUpdateInput };
